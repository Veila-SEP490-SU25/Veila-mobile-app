#!/usr/bin/env node

/**
 * Script ki·ªÉm tra Firebase Phone Authentication configuration
 * Ch·∫°y: node scripts/check-firebase-phone-auth.js
 */

const fs = require("fs");
const path = require("path");

console.log("üîç Ki·ªÉm tra Firebase Phone Authentication Configuration...\n");

// 1. Ki·ªÉm tra app.json
console.log("1Ô∏è‚É£ Ki·ªÉm tra app.json:");
try {
  const appJson = JSON.parse(fs.readFileSync("app.json", "utf8"));
  const iosBundleId = appJson.expo?.ios?.bundleIdentifier;
  const androidPackage = appJson.expo?.android?.package;

  console.log(`   iOS Bundle ID: ${iosBundleId || "‚ùå Kh√¥ng c√≥"}`);
  console.log(`   Android Package: ${androidPackage || "‚ùå Kh√¥ng c√≥"}`);

  if (!iosBundleId && !androidPackage) {
    console.log("   ‚ö†Ô∏è  C·∫ßn th√™m bundleIdentifier/package v√†o app.json");
  }
} catch (error) {
  console.log("   ‚ùå Kh√¥ng th·ªÉ ƒë·ªçc app.json:", error.message);
}

// 2. Ki·ªÉm tra app.config.js
console.log("\n2Ô∏è‚É£ Ki·ªÉm tra app.config.js:");
try {
  const appConfigContent = fs.readFileSync("app.config.js", "utf8");
  const firebaseVars = [
    "FIREBASE_API_KEY",
    "FIREBASE_AUTH_DOMAIN",
    "FIREBASE_PROJECT_ID",
    "FIREBASE_STORAGE_BUCKET",
    "FIREBASE_MESSAGING_SENDER_ID",
    "FIREBASE_APP_ID",
    "FIREBASE_MEASUREMENT_ID",
  ];

  firebaseVars.forEach((varName) => {
    const hasVar = appConfigContent.includes(varName);
    console.log(`   ${varName}: ${hasVar ? "‚úÖ C√≥" : "‚ùå Kh√¥ng c√≥"}`);
  });
} catch (error) {
  console.log("   ‚ùå Kh√¥ng th·ªÉ ƒë·ªçc app.config.js:", error.message);
}

// 3. Ki·ªÉm tra .env
console.log("\n3Ô∏è‚É£ Ki·ªÉm tra .env file:");
try {
  if (fs.existsSync(".env")) {
    const envContent = fs.readFileSync(".env", "utf8");
    const firebaseVars = [
      "FIREBASE_API_KEY",
      "FIREBASE_AUTH_DOMAIN",
      "FIREBASE_PROJECT_ID",
      "FIREBASE_STORAGE_BUCKET",
      "FIREBASE_MESSAGING_SENDER_ID",
      "FIREBASE_APP_ID",
      "FIREBASE_MEASUREMENT_ID",
    ];

    firebaseVars.forEach((varName) => {
      const hasVar = envContent.includes(varName);
      console.log(`   ${varName}: ${hasVar ? "‚úÖ C√≥" : "‚ùå Kh√¥ng c√≥"}`);
    });
  } else {
    console.log("   ‚ùå Kh√¥ng t√¨m th·∫•y .env file");
  }
} catch (error) {
  console.log("   ‚ùå Kh√¥ng th·ªÉ ƒë·ªçc .env:", error.message);
}

// 4. H∆∞·ªõng d·∫´n fix Firebase Console
console.log("\nüîß H∆Ø·ªöNG D·∫™N FIX FIREBASE CONSOLE:");
console.log("1. V√†o https://console.firebase.google.com/");
console.log("2. Ch·ªçn project Veila");
console.log("3. V√†o Authentication ‚Üí Sign-in method");
console.log("4. Enable Phone provider");
console.log("5. V√†o Project Settings ‚Üí General");
console.log("6. Ki·ªÉm tra app c√≥ bundleIdentifier: com.veila.app");
console.log('7. N·∫øu ch∆∞a c√≥ app, click "Add app" ‚Üí iOS');
console.log("8. Nh·∫≠p Bundle ID: com.veila.app");
console.log("9. Download google-services.plist v√† th√™m v√†o iOS project");

// 5. Ki·ªÉm tra iOS project
console.log("\n4Ô∏è‚É£ Ki·ªÉm tra iOS project:");
const iosProjectPath = path.join(__dirname, "..", "ios");
if (fs.existsSync(iosProjectPath)) {
  console.log("   ‚úÖ iOS project t·ªìn t·∫°i");

  // Ki·ªÉm tra GoogleService-Info.plist
  const googleServicePath = path.join(
    iosProjectPath,
    "Veila",
    "GoogleService-Info.plist"
  );
  if (fs.existsSync(googleServicePath)) {
    console.log("   ‚úÖ GoogleService-Info.plist t·ªìn t·∫°i");
  } else {
    console.log("   ‚ùå GoogleService-Info.plist kh√¥ng t·ªìn t·∫°i");
    console.log(
      "   üì• C·∫ßn download t·ª´ Firebase Console v√† th√™m v√†o ios/Veila/"
    );
  }
} else {
  console.log("   ‚ùå iOS project kh√¥ng t·ªìn t·∫°i");
  console.log("   üí° Ch·∫°y: npx expo prebuild ƒë·ªÉ t·∫°o iOS project");
}

console.log("\nüéØ SAU KHI FIX FIREBASE CONSOLE:");
console.log("1. Restart app");
console.log("2. Clear Metro cache: npx expo start --clear");
console.log("3. Test l·∫°i Phone Authentication");
console.log('4. Ki·ªÉm tra logs: "Firebase Phone Auth: SMS sent successfully"');

console.log("\nüìû N·∫øu v·∫´n g·∫∑p v·∫•n ƒë·ªÅ:");
console.log("- Ch·ª•p m√†n h√¨nh Firebase Console");
console.log("- Copy console logs");
console.log("- G·ª≠i th√¥ng tin cho team dev");
